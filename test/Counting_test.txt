Running test 8:
No symbols list supplied. Attempting to estimate state number from input matrix.
Using the joint ctypes: 1
The newick string processed: UNTITLED = [&R] ((((((1,2),3),4),5),6),(7,(8,(9,(10,(11,12))))));
Newick string is rooted

Length after first traversal: 0
Tip visited: 2
Tip visited: 3
Tip visited: 4
Tip visited: 5
Tip visited: 6
Tip visited: 7
Tip visited: 8
Tip visited: 9
Tip visited: 10
Tip visited: 11
Tip visited: 12
BEGIN TEST tui_check_broken_tree()
== PASS == tui_check_broken_tree(): input tree connections verified OK

END broken tree test

node: 18
2nd Down: Active states incremented = c(1,2) (c1)
2nd Down: left = c(2)
2nd Down: right = c(1)
2nd Down: node = c(1,2)

node: 17
2nd Down: Active states incremented = c(1,2) (c2)
2nd Down: left = c(1,2)
2nd Down: right = c(-)
2nd Down: node = c(-)

node: 16
2nd Down: left = c(-)
2nd Down: right = c(-)
2nd Down: node = c(-)

node: 15
2nd Down: Active states incremented = c(1,2,3) (c2)
2nd Down: left = c(-)
2nd Down: right = c(3)
2nd Down: node = c(-)

node: 14
2nd Down: left = c(-)
2nd Down: right = c(0,3)446744073709551615
2nd Down: node = c(-)


Problem here:
This does not get incremented on node 18 (inverse of that) because:
node 18 = c(1,2) and actives = c(0,2,3)
node: 23
2nd Down: Length gets incremented ++++++++++++++++++++++++++
2nd Down: left = c(3)
2nd Down: right = c(2)
2nd Down: node = c(2,3)

node: 22
2nd Down: Active states incremented = c(0,1,2,3) (c1)
2nd Down: left = c(0)
2nd Down: right = c(2,3)
2nd Down: node = c(0,2,3)

node: 21
2nd Down: Active states incremented = c(0,1,2,3) (c2)
2nd Down: left = c(-)
2nd Down: right = c(0,2,3)
2nd Down: node = c(-)

node: 20
2nd Down: left = c(-)
2nd Down: right = c(-)
2nd Down: node = c(-)

node: 19
2nd Down: left = c(0,3)446744073709551615
2nd Down: right = c(-)
2nd Down: node = c(-)

node: 13
2nd Down: left = c(-)
2nd Down: right = c(-)
2nd Down: node = c(-)

node: 13
2nd Up: ancestor = c(-)
2nd Up: left = c(-)
2nd Up: right = c(-)
2nd Up: node = c(-)

node: 14
2nd Up: ancestor = c(-)
2nd Up: left = c(-)
2nd Up: right = c(0,3)446744073709551615
2nd Up: node = c(-)

node: 15
2nd Up: Active states incremented = c(3)
2nd Up: ancestor = c(-)
2nd Up: left = c(-)
2nd Up: right = c(3)
2nd Up: node = c(-)

node: 16
2nd Up: ancestor = c(-)
2nd Up: left = c(-)
2nd Up: right = c(-)
2nd Up: node = c(-)

node: 17
2nd Up: Active states incremented = c(1,2,3)
2nd Up: ancestor = c(-)
2nd Up: left = c(1,2)
2nd Up: right = c(-)
2nd Up: node = c(-)

node: 18
2nd Up: Active states incremented = c(1,2,3)
2nd Up: ancestor = c(-)
2nd Up: left = c(2)
2nd Up: right = c(1)
2nd Up: node = c(1,2)

node: 19
2nd Up: ancestor = c(-)
2nd Up: left = c(0,3)446744073709551615
2nd Up: right = c(-)
2nd Up: node = c(-)

node: 20
2nd Up: ancestor = c(-)
2nd Up: left = c(-)
2nd Up: right = c(-)
2nd Up: node = c(-)

node: 21
2nd Up: Length gets incremented
2nd Up: Active states incremented = c(0,1,2,3)
2nd Up: ancestor = c(-)
2nd Up: left = c(-)
2nd Up: right = c(0,2,3)
2nd Up: node = c(-)

node: 22
2nd Up: Active states incremented = c(0,1,2,3)
2nd Up: ancestor = c(-)
2nd Up: left = c(0)
2nd Up: right = c(2,3)
2nd Up: node = c(0,2,3)

node: 23
2nd Up: Active states incremented = c(0,1,2,3)
2nd Up: ancestor = c(0,2,3)
2nd Up: left = c(3)
2nd Up: right = c(2)
2nd Up: node = c(0,2,3)

Uppass OK


Here's the length after the uppass: 2

SUMMARY:
Test of all topologies for matrix 21--3??--032; concluded





Running test 32:
No symbols list supplied. Attempting to estimate state number from input matrix.
Using the joint ctypes: 1
The newick string processed: UNTITLED = [&R] ((((((1,2),3),4),5),6),(7,(8,(9,(10,(11,12))))));
Newick string is rooted

Length after first traversal: 0
Tip visited: 2
Tip visited: 3
Tip visited: 4
Tip visited: 5
Tip visited: 6
Tip visited: 7
Tip visited: 8
Tip visited: 9
Tip visited: 10
Tip visited: 11
Tip visited: 12
BEGIN TEST tui_check_broken_tree()
== PASS == tui_check_broken_tree(): input tree connections verified OK

END broken tree test



node: 18
2nd Down: Active states incremented = c(0,2) (c1)
2nd Down: left = c(0)
2nd Down: right = c(2)
2nd Down: node = c(0,2)

node: 17
2nd Down: Active states incremented = c(0,2,3) (c1)
2nd Down: left = c(0,2)
2nd Down: right = c(3)
2nd Down: node = c(0,2,3)

node: 16
2nd Down: left = c(0,2,3)
2nd Down: right = c(-)
2nd Down: node = c(0,2,3)

node: 15
2nd Down: left = c(0,2,3)
2nd Down: right = c(0,3)446744073709551615
2nd Down: node = c(0,2,3)

node: 14
2nd Down: left = c(0,2,3)
2nd Down: right = c(0,3)446744073709551615
2nd Down: node = c(0,2,3)

node: 23
2nd Down: Length gets incremented
2nd Down: left = c(3)
2nd Down: right = c(2)
2nd Down: node = c(2,3)

node: 22
2nd Down: left = c(-)
2nd Down: right = c(2,3)
2nd Down: node = c(2,3)

node: 21
2nd Down: left = c(-)
2nd Down: right = c(2,3)
2nd Down: node = c(2,3)

node: 20
2nd Down: Active states incremented = c(0,1,2,3) (c1)
2nd Down: left = c(1)
2nd Down: right = c(2,3)
2nd Down: node = c(1,2,3)

node: 19
2nd Down: left = c(0,3)446744073709551615
2nd Down: right = c(1,2,3)
2nd Down: node = c(1,2,3)

node: 13
Problem here: this increments an extra value because node 14 is c(0,2,3) and node 
19 is 1. Union makes node c(0,1,2,3) and actives are c(0,1,2,3)

2nd Down: left = c(0,2,3)
2nd Down: right = c(1,2,3)
2nd Down: node = c(2,3)




2nd Up: ancestor = c(0,1,2,3)
2nd Up: left = c(0,2,3)
2nd Up: right = c(1,2,3)
2nd Up: node = c(0,1,2,3)

2nd Up: ancestor = c(0,1,2,3)
2nd Up: left = c(0,2,3)
2nd Up: right = c(0,3)446744073709551615
2nd Up: node = c(0,1,2,3)

2nd Up: ancestor = c(0,1,2,3)
2nd Up: left = c(0,2,3)
2nd Up: right = c(0,3)446744073709551615
2nd Up: node = c(0,1,2,3)

2nd Up: Active states incremented = c(0,2,3)
2nd Up: ancestor = c(0,1,2,3)
2nd Up: left = c(0,2,3)
2nd Up: right = c(-)
2nd Up: node = c(0,1,2,3)

2nd Up: Active states incremented = c(0,2,3)
2nd Up: ancestor = c(0,1,2,3)
2nd Up: left = c(0,2)
2nd Up: right = c(3)
2nd Up: node = c(0,1,2,3)

2nd Up: Active states incremented = c(0,2,3)
2nd Up: ancestor = c(0,1,2,3)
2nd Up: left = c(0)
2nd Up: right = c(2)
2nd Up: node = c(0,1,2,3)

2nd Up: ancestor = c(0,1,2,3)
2nd Up: left = c(0,3)446744073709551615
2nd Up: right = c(1,2,3)
2nd Up: node = c(0,1,2,3)

2nd Up: Active states incremented = c(0,1,2,3)
2nd Up: ancestor = c(0,1,2,3)
2nd Up: left = c(1)
2nd Up: right = c(2,3)
2nd Up: node = c(0,1,2,3)

2nd Up: Active states incremented = c(0,1,2,3)
2nd Up: ancestor = c(0,1,2,3)
2nd Up: left = c(-)
2nd Up: right = c(2,3)
2nd Up: node = c(0,1,2,3)

2nd Up: Active states incremented = c(0,1,2,3)
2nd Up: ancestor = c(0,1,2,3)
2nd Up: left = c(-)
2nd Up: right = c(2,3)
2nd Up: node = c(0,1,2,3)

2nd Up: Active states incremented = c(0,1,2,3)
2nd Up: ancestor = c(0,1,2,3)
2nd Up: left = c(3)
2nd Up: right = c(2)
2nd Up: node = c(0,1,2,3)


Here's the length after the uppass: 1

SUMMARY:
Test of all topologies for matrix 023-???1--32; concluded
All tests PASSED






















Running test 36:
No symbols list supplied. Attempting to estimate state number from input matrix.
Using the joint ctypes: 1
The newick string processed: UNTITLED = [&R] ((((((1,2),3),4),5),6),(7,(8,(9,(10,(11,12))))));
Newick string is rooted

Length after first traversal: 0
Tip visited: 2
Tip visited: 3
Tip visited: 4
Tip visited: 5
Tip visited: 6
Tip visited: 7
Tip visited: 8
Tip visited: 9
Tip visited: 10
Tip visited: 11
Tip visited: 12
BEGIN TEST tui_check_broken_tree()
== PASS == tui_check_broken_tree(): input tree connections verified OK

END broken tree test

2nd Down: Active states incremented = c(0,1) (c1)
2nd Down: left = c(1)
2nd Down: right = c(0)
2nd Down: node = c(0,1)

2nd Down: Active states incremented = c(0,1) (c2)
2nd Down: left = c(0,1)
2nd Down: right = c(-)
2nd Down: node = c(-)

2nd Down: left = c(-)
2nd Down: right = c(-)
2nd Down: node = c(-)

2nd Down: left = c(-)
2nd Down: right = c(-)
2nd Down: node = c(-)

2nd Down: left = c(-)
2nd Down: right = c(-)
2nd Down: node = c(-)

2nd Down: Active states incremented = c(0,1) (c2)
2nd Down: left = c(-)
2nd Down: right = c(1)
2nd Down: node = c(-)

2nd Down: left = c(-)
2nd Down: right = c(-)
2nd Down: node = c(-)

2nd Down: left = c(-)
2nd Down: right = c(-)
2nd Down: node = c(-)

2nd Down: left = c(1)
2nd Down: right = c(-)
2nd Down: node = c(1)

2nd Down: left = c(1)
2nd Down: right = c(1)
2nd Down: node = c(1)

2nd Down: left = c(-)
2nd Down: right = c(1)
2nd Down: node = c(1)

2nd Up: Active states incremented = c(1)
2nd Up: ancestor = c(1)
2nd Up: left = c(-)
2nd Up: right = c(1)
2nd Up: node = c(1)

2nd Up: ancestor = c(1)
2nd Up: left = c(-)
2nd Up: right = c(-)
2nd Up: node = c(-)

2nd Up: ancestor = c(-)
2nd Up: left = c(-)
2nd Up: right = c(-)
2nd Up: node = c(-)

2nd Up: ancestor = c(-)
2nd Up: left = c(-)
2nd Up: right = c(-)
2nd Up: node = c(-)

2nd Up: Length gets incremented
2nd Up: Active states incremented = c(0,1)
2nd Up: ancestor = c(-)
2nd Up: left = c(0,1)
2nd Up: right = c(-)
2nd Up: node = c(-)

2nd Up: Active states incremented = c(0,1)
2nd Up: ancestor = c(-)
2nd Up: left = c(1)
2nd Up: right = c(0)
2nd Up: node = c(0,1)

2nd Up: ancestor = c(1)
2nd Up: left = c(1)
2nd Up: right = c(1)
2nd Up: node = c(1)

2nd Up: Active states incremented = c(0,1)
2nd Up: ancestor = c(1)
2nd Up: left = c(1)
2nd Up: right = c(-)
2nd Up: node = c(1)

2nd Up: ancestor = c(1)
2nd Up: left = c(-)
2nd Up: right = c(-)
2nd Up: node = c(-)

2nd Up: ancestor = c(-)
2nd Up: left = c(-)
2nd Up: right = c(-)
2nd Up: node = c(-)

2nd Up: Length gets incremented
2nd Up: Active states incremented = c(0,1)
2nd Up: ancestor = c(-)
2nd Up: left = c(-)
2nd Up: right = c(1)
2nd Up: node = c(-)


Here's the length after the uppass: 2

SUMMARY:
Test of all topologies for matrix 10----11---1; concluded
All tests PASSED